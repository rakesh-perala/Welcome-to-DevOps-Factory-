// Modal logic
const modal = document.getElementById('name-modal');
const mainContent = document.getElementById('main-content');
const greeting = document.getElementById('greeting');
const wishes = document.getElementById('wishes');
const usernameInput = document.getElementById('username');
const submitBtn = document.getElementById('submit-name');

submitBtn.addEventListener('click', showWishes);
usernameInput.addEventListener('keydown', function(e) {
    if (e.key === 'Enter') showWishes();
});

function showWishes() {
    const name = usernameInput.value.trim();
    if (!name) {
        usernameInput.focus();
        return;
    }

    modal.style.display = 'none';
    mainContent.classList.remove('hidden');

    greeting.textContent = `Welcome to DevOps Factory, ${name}! üöÄ`;
    
    // Motivational DevOps/learning quotes
    const wishesList = [
        'üíª Let‚Äôs learn together and build amazing pipelines!',
        'üöÄ Keep coding, keep deploying, keep learning!',
        'üîß Automation is the key to happiness!',
        'üìö Every failure is a step closer to mastery!',
        'üéØ Stay curious, stay consistent, stay DevOps!',
        '‚ú® Today‚Äôs commits are tomorrow‚Äôs deployments!',
        '‚ö° Collaboration + CI/CD = Success!',
        'üñ•Ô∏è Code, Build, Test, Deploy, Repeat!',
        'üå± Learn, practice, grow, repeat!',
        'üî• Passion for DevOps is the fuel for progress!'
    ];

    const randomWish = wishesList[Math.floor(Math.random() * wishesList.length)];
    wishes.textContent = randomWish;

    startFireworks(); // Optional fireworks animation
}

// Fireworks animation (kept from your previous Diwali script)
function randomColor() {
    const colors = ['#00ff00', '#00e676', '#00bfa5', '#00c853', '#76ff03', '#b2ff59'];
    return colors[Math.floor(Math.random() * colors.length)];
}

function startFireworks() {
    const canvas = document.getElementById('fireworks');
    if (!canvas) return;

    const ctx = canvas.getContext('2d');
    resizeCanvas();
    window.addEventListener('resize', resizeCanvas);

    let fireworks = [];
    let particles = [];

    function resizeCanvas() {
        canvas.width = window.innerWidth;
        canvas.height = window.innerHeight;
    }

    function Firework() {
        this.x = Math.random() * canvas.width;
        this.y = canvas.height;
        this.targetY = 150 + Math.random() * (canvas.height / 2 - 150);
        this.color = randomColor();
        this.speed = 6 + Math.random() * 2;
        this.exploded = false;
    }

    Firework.prototype.update = function() {
        if (!this.exploded) {
            this.y -= this.speed;
            if (this.y <= this.targetY) {
                this.exploded = true;
                explode(this.x, this.y, this.color);
            }
        }
    };

    Firework.prototype.draw = function() {
        if (!this.exploded) {
            ctx.save();
            ctx.beginPath();
            ctx.arc(this.x, this.y, 3, 0, 2 * Math.PI);
            ctx.fillStyle = this.color;
            ctx.shadowColor = this.color;
            ctx.shadowBlur = 10;
            ctx.fill();
            ctx.restore();
        }
    };

    function Particle(x, y, color) {
        this.x = x;
        this.y = y;
        this.color = color;
        this.radius = 2 + Math.random() * 2;
        this.angle = Math.random() * 2 * Math.PI;
        this.speed = 2 + Math.random() * 4;
        this.alpha = 1;
        this.decay = 0.01 + Math.random() * 0.015;
    }

    Particle.prototype.update = function() {
        this.x += Math.cos(this.angle) * this.speed;
        this.y += Math.sin(this.angle) * this.speed + 0.5; // gravity
        this.speed *= 0.98;
        this.alpha -= this.decay;
    };

    Particle.prototype.draw = function() {
        if (this.alpha > 0) {
            ctx.save();
            ctx.globalAlpha = this.alpha;
            ctx.beginPath();
            ctx.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);
            ctx.fillStyle = this.color;
            ctx.shadowColor = this.color;
            ctx.shadowBlur = 12;
            ctx.fill();
            ctx.restore();
        }
    };

    function explode(x, y, color) {
        for (let i = 0; i < 40 + Math.random() * 20; i++) {
            particles.push(new Particle(x, y, color));
        }
    }

    function animate() {
        ctx.clearRect(0, 0, canvas.width, canvas.height);
        if (Math.random() < 0.07) fireworks.push(new Firework());

        fireworks.forEach((fw, i) => {
            fw.update();
            fw.draw();
            if (fw.exploded) fireworks.splice(i, 1);
        });

        particles.forEach((p, i) => {
            p.update();
            p.draw();
            if (p.alpha <= 0) particles.splice(i, 1);
        });

        requestAnimationFrame(animate);
    }
    animate();
}
